[citrix-cve-2019-19781]
product = Citrix
description = Citrix Application Delivery Controller and Citrix Gateway <= 13.0 RCE [CVE-2019-19781 - CVSS=9.8]
type = rce
exploit_cmd = python3 exploit-citrix-cve-2019-19781.py '[URL]' '[CMD]'
exploit_rce_output = yes
exploit_success = Command run from Exploit


[coldfusion-cve-2017-3066]
product = Adobe Coldfusion
description = Adobe Coldfusion BlazeDS Deserialize RCE [CVE-2017-3066 - CVSS=9.8]
type = rce
exploit_cmd = ./exploit-coldfusion-cve-2017-3066.sh [BASEURL] '[CMD]'
exploit_rce_output = no


[drupal-cve-2014-3704]
product = Drupal
description = SQL Injection in Drupal 7.x <= 7.31 allowing admin creation - Drupalgeddon [CVE-2014-3704 - CVSS=7.5]
type = sqli
exploit_cmd = python2.7 exploit-drupal-cve-2014-3704.py -t [BASEURL] -u jok3ruser -p jok3rpwd
exploit_success = Administrator user created


[drupal-cve-2018-7600]
product = Drupal
description = Drupal 7.x <= 7.57 Unauthenticated RCE - Drupalgeddon2 [CVE-2018-7600 - CVSS=9.8]
type = rce
exploit_cmd = python3 exploit-drupal7-cve-2018-7600.py -c '[CMD]' '[URL]'
exploit_rce_output = yes
exploit_success = Command run from Exploit


[drupal-cve-2019-6340]
product = Drupal
description = Drupal 8.x <= 8.6.9 REST Services Unauthenticated RCE [CVE-2019-6340 - CVSS=8.1]
type = rce
exploit_cmd = python3 exploit-drupal-cve-2019-6340.py '[URL]' '[CMD]'
exploit_rce_output = yes
exploit_success = Command run from Exploit


[jboss-cve-2015-7501]
product = JBoss
description = JBoss Deserialize RCE [CVE-2015-7501 - CVSS=9.8]
type = rce
exploit_cmd = python2.7 jboss-cve-2015-7501.py --proto http[SSL true="s"] [IP]:[PORT] '[CMD]'
exploit_rce_output = no


[jboss-cve-2017-7504]
product = JBoss
description = JBoss 4.x JBossMQ JMS Deserialize RCE [CVE-2017-7504 - CVSS=9.8]
type = rce
exploit_cmd = ./exploit-jboss-cve-2017-7504.sh [BASEURL] '[CMD]'
exploit_rce_output = no


[jboss-cve-2017-12149]
product = JBoss
description = JBoss 5.x/6.x Deserialize RCE [CVE-2017-12149 - CVSS=9.8]
type = rce
detection_cmd = python3 detect-jboss-cve-2017-12149.py '[URL]'
detection_success = Find CVE-2017-12149
exploit_cmd = ./exploit-jboss-cve-2017-12149.sh [BASEURL] '[CMD]'
exploit_rce_output = no


[jenkins-cve-2015-8103]
product = Jenkins
description = Jenkins CLI RMI Java Deserialize RCE [CVE-2015-8103 - CVSS=9.8]
type = rce
exploit_cmd = python2.7 exploit-jenkins-cve-2015-8103.py --proto http[SSL true="s"] --ysoserial-path ../ysoserial-0.0.6-SNAPSHOT-BETA-all.jar [IP]:[PORT] '[CMD]'
exploit_rce_output = no


[jenkins-cve-2016-0792]
product = Jenkins
description = Jenkins Groovy XML RCE [CVE-2016-0792 - CVSS=8.8]
type = rce
exploit_cmd = python2.7 jenkins-cve-2015-7501.py --proto http[SSL true="s"] [IP]:[PORT] '[CMD]'
exploit_rce_output = no


[jenkins-cve-2017-1000353]
product = Jenkins
description = Jenkins <= 2.56, LTS <= 2.46.1 Java Deserialize Unauthenticated RCE [CVE-2017-1000353 - CVSS=9.8]
type = rce
exploit_cmd = java -jar CVE-2017-1000353-1.1-SNAPSHOT-all.jar jenkins_poc.ser '[CMD]'; python exploit.py http[SSL true="s"]://[IP]:[PORT] jenkins_poc.ser
exploit_rce_output = no


[jenkins-cve-2018-1000861]
product = Jenkins
description = Jenkins <= 2.153, LTS <= 2.138.3 Unauthenticated RCE via method invokation [CVE-2018-1000861 - CVSS=9.8]
type = rce
exploit_cmd = python2.7 exploit-jenkins-cve-2018-1000861.py [URL] '[CMD]'
exploit_rce_output = no


[magento-2.2-sqli]
product = Magento
description = Magento 2.2.0 <= 2.3.0 Unauthenticated SQLi - user/admin session ID retrieval [CVE-2019-7139 - CVSS=9.8]
type = sqli
exploit_cmd = python3 magento-2.2-sqli.py [BASEURL]
exploit_success = Session ID:


[rails-cve-2018-3760]
product = Ruby on Rails
description = Path Traversal/File Content Disclosure Vulnerability [CVE-2018-3760 - CVSS=7.5]
type = path-trav
exploit_cmd = ./exploit-rails-cve-2018-3760.sh [BASEURL]
exploit_success = root:


[rails-cve-2019-5418]
product = Ruby on Rails
description = Path Traversal/File Content Disclosure Vulnerability [CVE-2019-5418 - CVSS=7.5]
type = path-trav
detection_cmd = ruby detect-rails-cve-2019-5418.rb http[SSL true="s"]://[IP]:[PORT] /robots ''
detection_success = vulnerable to CVE-2019-5418 => OK
exploit_cmd = ruby detect-rails-cve-2019-5418.rb http[SSL true="s"]://[IP]:[PORT] /robots ''
exploit_success = vulnerable to CVE-2019-5418 => OK


[rails-cve-2019-5420]
product = Ruby on Rails
description = File Content Disclosure (CVE-2019-5418) + RCE (CVE-2019-5420) On Ruby on Rails [CVE-2019-5420 - CVSS=9.8]
type = rce
exploit_cmd = ruby rails-cve-2019-5420.rb http[SSL true="s"]://[IP]:[PORT] /robots ''
exploit_rce_output = yes
exploit_success = Vulnerable to CVE-2019-5420


[struts-cve-2017-9805]
product = Apache Struts2
description = Apache Struts2 REST Plugin XStream Remote Code Execution [CVE-2017-9805 - CVSS=8.1]
type = rce
detection_cmd = python3 exploit-struts-cve-2017-9805.py -u [URL]
detection_success = Vulnerable!
exploit_cmd = python3 exploit-struts-cve-2017-9805.py -u [URL] --cmd '[CMD]' --exploit
exploit_rce_output = no 


[struts-cve-2018-11776]
product = Apache Struts2
description = Apache Struts2 Remote Code Execution [CVE-2018-11776 - CVSS=8.1]
type = rce
detection_cmd = python3 exploit-struts-cve-2018-11776.py -u [URL]
detection_success = Status: Vulnerable!
exploit_cmd = python3 exploit-struts-cve-2018-11776.py -u [URL] --cmd '[CMD]' --exploit
exploit_rce_output = no 


[tomcat-cve-2017-12617]
product = Apache Tomcat
description = Apache Tomcat JSP Upload Bypass RCE via PUT method [CVE-2017-12617 - CVSS=8.1]
type = rce
detection_cmd = python2.7 tomcat-cve-2017-12617.py -u [URL]
detection_success = is Vulnerable to CVE-2017-12617


[weblogic-cve-2015-4852]
product = Oracle Weblogic
description = Weblogic T3(s) Deserialize RCE [CVE-2015-4852 - CVSS=9.8]
type = rce
exploit_cmd = python2.7 loubia.py [IP] [PORT] [SSL true="-s"] -o unix -c '[CMDLINUX]' -v; python2.7 loubia.py [IP] [PORT] [SSL true="-s"] -o win -c '[CMDWINDOWS]' -v
exploit_rce_output = no


[weblogic-cve-2016-0638]
product = Oracle Weblogic
description = Weblogic T3 Deserialize [CVE-2016-0638 - CVSS=9.8]
type = rce
detection_cmd = python3 exploit-cve-2016-0638.py [IP] [PORT]
detection_success = [+] Target is vulnerable


[weblogic-cve-2016-3510]
product = Oracle Weblogic
description = Weblogic T3 Deserialize [CVE-2016-3510 - CVSS=9.8]
type = rce
exploit_cmd = python2.7 weblogic-cve-2016-3510.py [IP]:[PORT] '[CMD]'
exploit_rce_output = no


[weblogic-cve-2017-3248]
product = Oracle Weblogic
description = Weblogic RMI Registry UnicastRef Object Java Deserialization Remote Code Execution [CVE-2017-3248 - CVSS=9.8]
type = rce
detection_cmd = python3 detect-weblogic-cve-2017-3248.py [IP] [PORT]
detection_success = [+] Target is vulnerable
#exploit_cmd = ./exploit-cve-2017-3248.sh [IP] [PORT] [LOCALIP] '[CMD]'
#exploit_rce_output = no


[weblogic-cve-2017-3506]
product = Oracle Weblogic
description = Weblogic WLS-WSAT XMLDecoder Deserialization Remote Code Execution [CVE-2017-3506 - CVSS=9.8]
type = rce
detection_cmd = java -jar WebLogic-XMLDecoder.jar -u '[URL]'
detection_success = [+]


[weblogic-cve-2017-10271]
product = Oracle Weblogic
description = Weblogic WLS-WSAT RCE [CVE-2017-10271 - CVSS=7.5]
type = rce
detection_cmd = python3 detect-cve-2017-10271.py [IP] [PORT]
detection_success = The target weblogic has a JAVA deserialization vulnerability
exploit_cmd = python3 exploit-weblogic-cve-2017-10271.py -r [URL] --cmd '[CMD]'
exploit_rce_output = no


[weblogic-cve-2018-2628]
product = Oracle Weblogic
description = Weblogic T3 Deserialize RCE [CVE-2018-2628 - CVSS=9.8]
type = rce
detection_cmd = python3 detect-weblogic-cve-2018-2628.py [IP] [PORT]
detection_success = [+] Target is vulnerable
exploit_cmd = ./exploit-cve-2018-2628.sh [IP] [PORT] [LOCALIP] '[CMD]'
exploit_rce_output = no


[weblogic-cve-2018-2893]
product = Oracle Weblogic
description = Weblogic T3 Deserialize RCE [CVE-2018-2893 - CVSS=9.8]
type = rce
detection_cmd = python3 detect-weblogic-cve-2018-2893.py [IP] [PORT]
detection_success =  [+] Target is vulnerable


[weblogic-cve-2018-2894]
product = Oracle Weblogic
description = Weblogic Unauthenticated Webshell deploiement [CVE-2018-2894 - CVSS=9.8]
type = rce
detection_cmd = python2.7 weblogic-cve-2018-2894.py -t [URL]
detection_success = vulnerable to CVE-2018-2894


[weblogic-cve-2018-3191]
product = Oracle Weblogic
description = Weblogic T3 Deserialize RCE [CVE-2018-3191 - CVSS=9.8]
type = rce
detection_cmd = python3 detect-weblogic-cve-2018-3191.py [IP] [PORT]
detection_success =  [+] Target is vulnerable


[weblogic-cve-2018-3245]
product = Oracle Weblogic
description = Weblogic T3 Deserialize RCE [CVE-2018-3245 - CVSS=9.8]
type = rce
exploit_cmd = ./exploit-cve-2018-3245.sh [IP] [PORT] [LOCALIP] '[CMD]'
exploit_rce_output = no


[weblogic-cve-2019-2725]
product = Oracle Weblogic
description = Weblogic WLS-WSAT RCE [CVE-2019-2725 - CVSS=9.8]
type = rce
exploit_cmd = python3 exploit-weblogic-cve-2019-2725.py -c '[CMD]' -pl process_builder '[URL]'
exploit_rce_output = no


[weblogic-cve-2019-2729]
product = Oracle Weblogic
description = Weblogic WLS-WSAT RCE (webshell deploy) [CVE-2019-2729 - CVSS=9.8]
type = rce
detection_cmd = python3 weblogic_get_webshell.py [BASEURL]
detection_success = whoami:


[weblogic-cve-2019-2890]
product = Oracle Weblogic
description = Weblogic T3 Deserialize RCE [CVE-2019-2890 - CVSS=9.8]
type = rce
detection_cmd = python3 detect-weblogic-cve-2019-2890.py [IP] [PORT]
detection_success =  [+] Target is vulnerable


[weblogic-cve-2020-2555]
product = Oracle Weblogic
description = Weblogic T3 Deserialize RCE [CVE-2020-2555 - CVSS=9.8]
type = rce
exploit_cmd = python2.7 exploit-weblogic-cve-2020-2555.py --url '[URL]' --cmd '[CMD]'
exploit_rce_output = no


[weblogic-cve-2020-2883]
product = Oracle Weblogic
description = Weblogic T3 Deserialize RCE [CVE-2020-2883 - CVSS=9.8]
type = rce
exploit_cmd = python2.7 exploit-weblogic-cve-2020-2883.py --url '[URL]' --cmd '[CMD]'
exploit_rce_output = no


[weblogic-cve-2020-14882]
product = Oracle Weblogic
description = Weblogic GET Request RCE [CVE-2020-14882 - CVSS=9.8]
type = rce
exploit_cmd = python3 exploit-weblogic-cve-2020-14882.py '[URL]' '[CMD]'
exploit_rce_output = no


[websphere-cve-2015-7450]
product = IBM Websphere
description = Websphere Deserialize RCE [CVE-2015-7450 - CVSS=9.8]
type = rce
exploit_cmd = python2.7 exploit-websphere-cve-2015-7450.py --proto http[SSL true="s"] [IP]:[PORT] '[CMD]'
exploit_rce_output = no

